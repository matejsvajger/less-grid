
/* Table of Contents
==================================================
    #Base Grid
    #Small Screen (960+ Desktop)
    #Tablet (Portrait)
    #Mobile (Portrait)
    #Mobile (Landscape)
    #Clearing 
    *
    */


  /* --- Responsive Grid variables ---*/ 
  @page_width: 1260px;
  @max_columns: 12;
  @padding: 0 10px;
  @gutter: 4px;

 


/* #Base Grid - screens - over 1260px
================================================== */
                
      .col,
      .cols {
           .mixin-col;
      }
       
      .row {
          margin: 0 auto;
          overflow:hidden;
          position:relative;
          .mixin-width(@page_width);
      }

    .row .col:first-child,
    .row .cols:first-child {
        .mixin-span_first;
    }


    .create-spans(@max_columns);
        

/* #Small screen (960+ Desktop)
================================================== */

    /* Note: Layout for a min width of 960px */

    @media only screen and (min-width: 960px) and (max-width: @page_width) {

        .row              { .mixin-width(@page_width, 960px); }
        .create-spans-px  ( @max_columns, 960px );
    }


/* #Tablet (Portrait)
================================================== */

    /* Note: Layout for a min width of 768px */

    @media only screen and (min-width: 768px) and (max-width: 959px) {

        .row              { .mixin-width(@page_width, 768px); }
        .create-spans-px  ( @max_columns, 768px );
    }


/*  #Mobile (Portrait)
================================================== */

    /* Note: Layout for a max width of 767px */

    @media only screen and (max-width: 767px) {

        .row              { .mixin-width(@page_width, 300px); }
        .create-spans-px  ( @max_columns, 300px );
    }

/* #Mobile (Landscape)
================================================== */

    /* Note: Layout for a min width of 480px */

    @media only screen and (min-width: 480px) and (max-width: 767px) {

        .row              { .mixin-width(@page_width, 480px); }
        .create-spans-px  ( @max_columns, 480px );
    }


//- #Reusable Column setup
//-=============================================== */
    .mixin-col() {
         border:0px solid rgba(0,0,0,0);
         float:left;
         -webkit-box-sizing:border-box;
         -moz-box-sizing:border-box;
         box-sizing:border-box;
         -moz-background-clip:padding-box !important;
         -webkit-background-clip:padding-box !important;
         background-clip:padding-box !important;
    }

    .mixin-span(@num, @gutter, @padding, @max_columns, @full_width: @page_width) when (ispixel(@gutter)) {
        @gutter_pc: ((@gutter * 100) / @full_width);
        @one_col: (100% - (@gutter_pc * (@max_columns - 1))) / @max_columns;
        width:(@one_col * @num) + (@gutter_pc * (@num - 1));
        padding:@padding;
        margin-left:@gutter;
    }
    .mixin-span(@num, @gutter, @padding, @max_columns, @width) when (ispercentage(@gutter)) {
        @gutter_pc: @gutter;
        @one_col: (100% - (@gutter_pc * (@max_columns - 1))) / @max_columns;
        width:(@one_col * @num) + (@gutter_pc * (@num - 1));
        padding:@padding;
        margin-left:@gutter;
    }

    .mixin-span_first() {
        margin-left:0;
    }

    .mixin-width(@width, @set: @page_width) when (ispixel(@width)) { width: @set; }
    .mixin-width(@width) when (ispercentage(@width)) { width: @width; }

//- #Column generator
//-=============================================== */
    // generate the grid columns
    .create-spans(@n, @width: @page_width, @i: 1) when (@i < @n) {
        .span_@{i} {
            .mixin-span(@i, @gutter, @padding, @max_columns, @width);
        }
        // next iteration
        .create-spans(@n, @width, (@i + 1));
    }
    // full width column gets special styles
    .create-spans(@n, @width, @i: 1) when (@i = @n) {
        .span_@{i} {
            .mixin-span_first;
            width:100%;
        }
    }
    // only recalculate span widths when gutter is a piel value
    .create-spans-px(@n, @width) when (ispixel(@gutter)) { .create-spans(@n, @width); }


/* #Clearing
================================================== */

    /* Self Clearing Goodness */
    .row:after { content: "\0020"; display: block; height: 0; clear: both; visibility: hidden; }

    /* Use clearfix class on parent to clear nested columns,
    or wrap each row of columns in a <div class="row"> */
    .clearfix:before,
    .clearfix:after,
    .row:before,
    .row:after {
      content: '\0020';
      display: block;
      overflow: hidden;
      visibility: hidden;
      width: 0;
      height: 0; }
    .row:after,
    .clearfix:after {
      clear: both; }
    .row,
    .clearfix {
      zoom: 1; }

    /* You can also use a <br class="clear" /> to clear columns */
    .clear {
      clear: both;
      display: block;
      overflow: hidden;
      visibility: hidden;
      width: 0;
      height: 0;
    }
